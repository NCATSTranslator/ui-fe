@import "../../Assets/Styles/variables";

.path {
  display: flex;
  align-items: center;
  width: auto;
  max-width: 65%;
  text-overflow: ellipsis;
  white-space: nowrap;
  background-color: $purpleEdgeBG;
  z-index: 10;
  color: $white;
  margin-right: 0;
  transition: all .25s ease;
  border-radius: $defaultBorderRadius;
  box-shadow: none;
  border: 1px solid $purpleEdgeBG;
  cursor: pointer;
  svg, svg path, svg circle, svg line {
    transition: all .25s ease;
    fill: $white;
    margin-right: 0;
  }
  &.hasMore {
    .more {
      font-size: 12px;
      color: $lightGray;
      display: block;
      font-weight: 700;
    }
  }
  .pathLabel {
    padding: 0 4px;
  }
  span {
    cursor: pointer; 
    text-overflow: ellipsis;
    overflow: hidden;
    &:hover {
      text-decoration: underline;
    }
  }
  path {
    transition: all .25s ease;
  }
  &:hover {
    // color: $black;
    // box-shadow: $dropShadowHover;
    background-color: $purpleEdgeBGHover;
    text-decoration: underline;
  }
}
.tooltipPredicate {
  margin-bottom: $xxs;
  display: flex;
  align-items: center;
  justify-content: space-between;
  svg {
    margin-left: $xxs;
    path {
      fill: $white;
    }
  } 
  span {
    font-size: $s;
    font-weight: 700;
    margin-bottom: $xxs;
    color: $white;
    cursor: pointer;
    &:hover {
      text-decoration: underline;
    }
  }
  &:last-child span {
    margin-bottom: 0;
  }
  &.inModal span {
    cursor: default;
    &:hover {
      text-decoration: none;
    }
  }
}
.selected {
  span.path {
    border: 1px solid $purpleEdgeBGSelected;
    background-color: $purpleEdgeBGSelected;
    color: $white;
  }

  .predicatesList {
    margin: 0;
    list-style-type: none;
  }
}
.ml .path, .trusted .path {
  position: relative;
  .mlTooltip {    
    span {
      max-width: none;
      font-size: 12px;
      line-height: 1.1;
      font-weight: 400;
      cursor: default;
      white-space: wrap;
      &:hover {
        text-decoration: none;
      }
    }
  }  
}
.badges {
  position: absolute;
  top: -13px;
  right: -16px;
  display: flex;
  img {
    box-shadow: $dropShadow;
  }
}
.robot {
  width: 18px;
  height: 18px;
  border-radius: 20px;
  background-color: $white;
  padding: 3px;
  z-index: 10;
  margin-right: 3px;
  transition: all .25s ease;
  svg {
    width: 18px;
    height: 18px;
    min-width: auto;
    path {
      fill: $purpleEdgeBG;
      stroke: $purpleEdgeBG;
    }
  }
  &.selected svg {
    path {
      fill: $purpleEdgeBGSelected;
      stroke: $purpleEdgeBGSelected !important;
    }
  }
}

svg.connector {
  width: 30px;
  position: absolute;
  top: 50%;
  bottom: 0;
  transform: translateY(-50%);
  height: auto;
  &.start {
    left: 0;
  }
  &.end {
    right: 0;
  }
}

.supportExpansionButton {
  position: absolute;
  bottom: -15px;
  margin: 0;
  border-radius: 50%;
  background-color: $white;
  color: $purpleEdgeBG;
  box-shadow: $dropShadow;
  z-index: 100;
  display: grid;
  justify-content: center;
  align-items: center;
  padding: 0;
  svg {
    margin: 0;
  }
  .supportButtonIcon {
    display: flex;
    margin: 0;
    transform: rotate(180deg);
    z-index: 10;
    position: relative;
    background-color: $white;
    border-radius: 50%;
    padding: 3px;
    transition: $defaultAnim;
    svg {
      width: 17px;
      min-width: 17px;
      height: 17px;
      min-height: 17px;
    }
  }
  &.expanded {
    border-radius: 50%;
    background-color: $white;
    .supportButtonIcon {
      transform: rotate(0);
    }
    .supportConnector {
      opacity: 1;
      height: 18px;
    }
  }
  .supportConnector {
    opacity: 0;
    transition: all .35s ease;
    height: 0;
    top: 20px;
    background-color: $purpleEdgeBG;
    width: 1px;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    z-index: 1;
  }
}
.evidenceIcon {
  transform: none !important;
}