@import "../../Assets/Styles/variables";


.nameContainer,.predicateContainer,.targetContainer {
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  position: relative;
  svg {
    width: 24px;
    height: 24px;
    min-width: 24px;
    min-height: 24px;
  }
  .provenance {
    display: flex !important;
    align-items: center;
    margin: $xs 0 0 0;
    color: $white;
    background-color: transparent;
    box-shadow: none;
    padding: 0;
    font-size: 14px;
    text-decoration: underline;
    span {
      font-size: 12px;
      text-decoration: underline;
      color: $white;
      overflow: hidden;
      text-overflow: ellipsis;
      display: inline;
      cursor: pointer;
    }
    svg {
      display: inline;
      margin: 0 4px 0 0;
      min-width: 18px;
      circle:first-child {
        stroke: $white;
        fill: transparent;
      }
      circle {
        fill: $white;
      }
      path {
        fill: $white;
      }
    }
  }
  .nameShape {
    position: absolute;
    top: 0;
    right: 0px;
    bottom: 0;
    left: -10px;
    clip-path: polygon(170px -16px ,188px 16px, 170px 48px, -8px 48px, 8px 16px, -8px -16px);
    transition: $defaultAnim;
    z-index: 20;
    border-top: 2px solid $purpleTwo;
    border-bottom: 2px solid $purpleTwo;
    .icon {
      content: "";
      display: block;
      position: absolute;
      top: 0;
      right: 0;
      width: 10px;
      height: 28px;
      background: url("/src/Icons/Connectors/PathArrow.svg") no-repeat center;
      background-size: contain;
      pointer-events: none;
      z-index: 50;
    }
    & > span {
      position: relative;
      z-index: 10;
    }
    svg {
      position: absolute;
      width: 8px;
      height: 28px;
      right: 1px;
      top: 0;
      min-width: auto;
      min-height: auto;
      path {
        fill: $midPurpleTwo;
      }
    }
  }
  &>span {
    padding: 5px;
    height: 16px;
    width: 160px;
  }
  span, mark {
    font-size: 12px;
    font-weight: 800;
    line-height: 1.25;
  }
  span.hasMore {
    cursor: pointer;
    &:hover {
      text-decoration: underline;
    }
  }
  .description {
    display: -webkit-box;
    -webkit-line-clamp: 4;
    line-clamp: 4;
    -webkit-box-orient: vertical;  
    -moz-box-orient: vertical;
    overflow: hidden;
    font-size: 14px;
    margin: 3px 0 8px;
    font-weight: 400;
  }
}
.name,.predicateContainer,.target {
  display: flex;
  align-items: center;
}
.text {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding: 0 4px;
  color: $black;
}
.nameContainer {
  position: relative;
  box-shadow: none;
  background-color: $lightGray;
  height: 32px;
  &:first-child::before {
    background-color: $lightGray;
  }
  &.even {
    background-color: $white;
    &:first-child::before {
      background-color: $white;
    }
  }
  svg {
    margin-right: 0;
    path {
      fill: $black;
    }
  }
}
.predicateContainer {
  padding: 0;
  position: relative;
  cursor: pointer;
  justify-content: space-between;
}

.predicateContainer.selected,
.nameContainer:has(+ .predicateContainer.selected),
.predicateContainer.selected + .nameContainer,
.predicateContainer.selected + div + .nameContainer {
  .nameShape {
    background-color: rgba(61, 43, 100, .2);
  }
}

.predicateContainer:hover
.nameContainer:hover, 
.nameContainer:has(+ .predicateContainer:hover)
.predicateContainer:hover + .nameContainer
.predicateContainer:hover + div + .nameContainer {
  .nameShape {
    background-color: rgba(58, 35, 107, .15);
  }
}

.nameContainer, .targetContainer {
  transition: all .25s ease;
}

.edgeLabel {
  fill: #000 !important;
}

.sourceEdgeContainer {
  display: flex;
  justify-content: center;
  align-items: center;
}
.sourceEdge {
  color: $black;
  font-size: 12px;
  margin-bottom: 0;
  display: grid;
  strong {
    color: $black;
    font-size: 12px;
    font-weight: 800;
  }
}

.edgeProvenanceLink {
  display: flex;
  justify-content: center;
  align-items: center;
  text-decoration: underline;
}

.inModal {
  background-color: transparent;
  border: none;
  &:first-child {
    right: -9px;
    .nameShape {
      clip-path: polygon(170px -16px,188px 16px,170px 48px,0% 48px,0 16px,0 -16px);
      left: 2px;
      svg {
        right: 10px;
      }
      &:before {
        background-image: none;
      }
    }
    &:has(+ svg) {
      .nameShape {
        clip-path: polygon(160px -16px,178px 16px,160px 48px,0% 48px,0 16px,0 -16px) !important;
        svg {
          display: none;
        }
      }
    }
  }
  &:last-child {
    border-color: $purpleTwo;
    border-width: 2px 0;
    border-style: solid;
  }
  &:after {
    display: none !important;
  }
  .nameShape {
    background-color: $lightGray;
    border-top: 2px solid $purpleTwo;
    border-bottom: 2px solid $purpleTwo;
    .icon {
      top: 0px;
      right: 1px;
    }
  }
  &:has(+ svg) {
    .nameShape {
      .icon {
        display: none !important;
      }
    }
  }
  .name {
    background-color: transparent !important;
    z-index: 50 !important;
  }
  &.selected,
  &.selected + .nameContainer,
  &.nameContainer:has(+ svg + div .predicateContainer.selected),
  &.nameContainer:has(+ .predicateContainer.selected) {
    .nameShape {
      background-color: $lightPurpleTwo;
    }
    &:before {
      background-color: $lightPurpleTwo;
    }
  }
  &:hover,
  &:hover + .nameContainer,
  &.nameContainer:has(+ svg + div .predicateContainer:hover),
  &.nameContainer:has(+ .predicateContainer:hover){
    .nameShape {
      background-color: $whiteHover !important;
    }
    &:before {
      background-color: $whiteHover !important;
    }
  }
}