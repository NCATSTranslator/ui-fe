@import "@/assets/styles/variables";

.pathView {
  padding: 0;
  position: relative;
  .paths {
    &.inModal {
      padding: 0 $l;
      .formattedPath {
        margin: 0 auto;
        padding-top: $s;
        padding-bottom: $s;
        padding-right: $l;
        display: block;
        width: min-content;
        .pathEvidenceButton, .num {
          display: none;
        }
        .tableItem > span:first-child {
          &:before {
            content: "";
            height: 28px;
            width: 4px;
            border-bottom-left-radius: 4px;
            border-top-left-radius: 4px;
            border-bottom-right-radius: 0;
            border-top-right-radius: 0;
            position: relative;
            top: 0;
            left: 0;
            display: block !important;
            box-shadow: none;
            z-index: 30;            
            transition: $defaultAnim;
            background-image: none;
          }
        }
        &:hover {
          z-index: 50;
        }
      }
    }
  }
  .tableHead, .tableItem {
    display: grid;
    justify-content: flex-start;
    align-items: center;
    .name, .target {
      font-size: 14px;
      font-weight: 800;
    }
    .pred {
      font-size: 12px;
      font-weight: 400;
    }
  }
  .tableHead {
    margin-bottom: $m;
    span {
      text-transform: uppercase;
      font-size: 10px;
      font-weight: 800;
      line-height: 12.5px;
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
      margin-right: 4px;
      cursor: pointer;
    }
  }
  .tableItem {
    position: relative;
    .nameContainer {
      .nameInterior {
        border-bottom-right-radius: $defaultBorderRadius;
        border-top-right-radius: $defaultBorderRadius;
        margin-right: -1px;
        z-index: 30;
      }
    }
    .nameContainer {
      &:last-child {
        border-width: 0;
        border-right-width: 13px;
        border-bottom-right-radius: $defaultBorderRadius;
        border-top-right-radius: $defaultBorderRadius;
        border-style: solid;
        border-color: $purpleTwo;
        .nameShape {
          clip-path: polygon(188px -16px,188px 16px,188px 48px,-8px 48px,8px 16px,-8px -16px);
          border: 2px solid $purpleTwo;
          border-bottom-right-radius: 8px;
          border-top-right-radius: 8px;
          right: -8px;
          border-left: none;
        }
        .icon {
          display: none !important;
        }
        .nameInterior {
          border-bottom-right-radius: $defaultBorderRadius;
          border-top-right-radius: $defaultBorderRadius;
          margin-right: -5px;
          background-color: $lightGray;
          height: 18px;
        }
      }
    }
    .pathContainer, .name, .target {
      line-height: 17.5px;
      border-radius: $defaultBorderRadius;
      padding: 7px 0;
    }
    .pathContainer {
      position: relative;
      svg {
        position: absolute;
        top: 50%;
        right: 0;
        bottom: 0;
        left: 0;
        width: 100%;
        transform: translateY(-50%);
      }
    }
    .path {
      display: block;
      justify-content: flex-start;
      box-shadow: none;
      width: auto;
      padding: 0 2px;
      max-width: 87px;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      background-color: white;
      z-index: 10;
      color: $darkGray;
      margin-right: 0;
      transition: all .25s ease;
      path {
        transition: all .25s ease;
      }
      &:hover {
        color: $black;
        path {
          fill: $black;
        }
      }
    }
    .name, .target {
      box-shadow: $dropShadow;
      transition: all .25s ease;
      width: 100%;
      overflow: hidden;
      &:hover {
        box-shadow: $dropShadowHover;
      }
    }
    .target {
      background-color: $blueOne;
      color: $white;
      svg {
        margin-right: 8px;
      }
    }
    &.compressedTableItem {
      grid-auto-columns: 178px;
      grid-template-rows: 1fr;
      grid-auto-flow: column;
      .groupedPreds {
        position: relative;
        right: -10px;
        &.hasSelected {
          position: relative;
          + svg + .nameContainer > .nameShape .background {
            background-color: $pathObjectSelected;
          }
          &:hover {
            + svg + .nameContainer > .nameShape .background {
              background-color: $pathObjectSelectedHover;
            }
          }
        }
        .predicateInterior {
          margin-bottom: 8px;
          &>div>svg {
            display: none;
          }
          &:last-child {
            margin-bottom: 0;
          }
          &:after {
            left: 0;
            right: 8px;
          }
        }
        &:hover {
          + svg + .nameContainer > .nameShape .background {
            background-color: $whiteHover;
          }
        }
        .icon {
          display: none;
        }
      }
      .connectors {
        position: relative;
        left: -10px;
        path {
          transition: stroke .5s ease;
        }
        & + .nameContainer > div svg {
          display: block;
        } 
      }

    }
  }
  .formattedPath {
    display: inline-grid;
    grid-template-columns: min-content min-content min-content 1fr;
    align-items: center;
    margin-bottom: $m;
    position: relative;
    transition: padding .5s ease;
    z-index: 50;
    &.isEven {
      .nameContainer:last-child .nameInterior, .nameShape .background, .predicateInterior, .num, .pathEvidenceButton .icon {
        background-color: $whitePathObject;
      }
      .nameInterior {
        border-color: $whitePathObject;
      }
      .pathEvidenceButton:hover {
        .icon, .num {
          background-color: $whitePathObjectHover;
        }
      }
    }
    &.seenPath {
      &>.pathEvidenceButton {
        .num .val {
          font-weight: 400;
        }
        .icon, .num {
          background-color: $grayPathObjectSeen;
        }
        &:hover {
          .icon, .num {
            background-color: $grayPathObjectSeenHover;
          }
        }
      }
      &.isEven {
        &>.pathEvidenceButton {
          .icon, .num {
            background-color: $whitePathObjectSeen;
          }
          &:hover {
            .icon, .num {
              background-color: $whitePathObjectSeenHover;
            }
          }
        }
      }
    }
    .num {
      width: 28px;
      height: 28px;
      display: flex;
      align-items: center;
      justify-content: center;
      align-self: flex-start;
      background-color: $lightGray;
      padding-right: $xxs;
      transition: $defaultAnim;
      .val {
        font-weight: 800;
        font-size: 12px;
        line-height: 1.25;
        color: $black;
        width: 15px;
        overflow: visible;
      }
      svg {
        position: relative;
        right: -4px;
        z-index: 100;
        path {
          fill: $midPurpleTwo;
        }
      }
    }
    .pathEvidenceButton {
      height: $l;
      display: flex;
      background-color: $purpleTwo;
      border-width: 2px 0 2px 8px;
      border-style: solid;
      border-color: $purpleTwo;
      padding: 0;
      border-bottom-left-radius: $defaultBorderRadius;
      border-top-left-radius: $defaultBorderRadius;
      margin: 0;
      transition: all .25s ease;
      align-self: start;
      outline: none !important;
      .icon {
        border-bottom-left-radius: $defaultBorderRadius;
        border-top-left-radius: $defaultBorderRadius;
        background-color: $lightGray;
        padding: 0 $xxs;
        height: 28px;
        display: flex;
        align-items: center;
        transition: $defaultAnim;
        position: relative;
        z-index: 10;
        svg {
          width: 20px;
          height: 20px;
          margin-right: 0;
          z-index: 10;
          path, line, circle {
            transition: all .25s ease;
            fill: $purpleTwo;
          }
        }
      }
      &:hover {
        .icon, .num {
          background-color: $grayPathObjectHover;
        }
      }
    }
    &.lastViewed {
      .pathEvidenceButton {
        &:after {
          left: -15px;
        }
      }
      .formattedPath {
        .pathEvidenceButton {
          &:after {
            left: 0;
          }
        }
      }
      
    }
    .nameContainer, .predicateInterior, .pathEvidenceButton {
      position: relative;
      grid-row: 1;
      &:after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0px;
        height: 30px;
        pointer-events: none;
        z-index: -1;
        border-radius: 4px;
        box-shadow: 0 3px 10px transparent;
        transition: all .25s ease;
      }
    }
    .tableItem span:last-child {
      &:after {
        right: -13px;
      }
    }
    .pathEvidenceButton {
      &:after {
        left: -8px;
      }
    }
    &:hover {
      z-index: 100;
      .nameContainer, .predicateInterior, .num, .pathEvidenceButton {
        &:after {
          box-shadow: $dropShadowHover;
        }
      }
      .formattedPath {
        .nameContainer, .predicateInterior, .num, .pathEvidenceButton {
          &:after {
            box-shadow: 0 3px 10px transparent;
          }
        }
        &:hover {
          .nameContainer, .predicateInterior, .num, .pathEvidenceButton {
            &:after {
              box-shadow: $dropShadowHover;
            }
          }
          .formattedPath {
            .nameContainer, .predicateInterior, .num, .pathEvidenceButton {
              &:after {
                box-shadow: 0 3px 10px transparent;
              }
            }
            &:hover {
              .nameContainer, .predicateInterior, .num, .pathEvidenceButton {
                &:after {
                  box-shadow: $dropShadowHover;
                }
              }
            }
          }
        }
      }
    }
  }
  .show {
    margin: 0;
    display: block;
    color: $darkGray;
    background-color: transparent;
    box-shadow: none;
    &:hover {
      text-decoration: underline;
    }
  }
  .buttons {
    display: flex;
    justify-content: center;
    button {
      font-weight: 800;
    }
    button:last-child {
      margin-left: $s;
    }
    button:first-child {
      margin-left: 0;
    }
  }
  .header {
    margin-bottom: $s;
    p {
      font-size: 12px;
      color: $darkGray;
    }
  }
  .support {
    grid-column: 1/8;
    grid-row: 2;
    background-color: $palePurple;
    border: 1px solid $lightPurpleTwo;
    border-radius: $defaultBorderRadius;
    margin: $s 0 0 0;
    position: relative;
    left: -42px;
    overflow: hidden visible !important;
    .formattedPath:last-of-type {
      margin-bottom: 0;
    }
    .supportGroupContainer {
      display: grid;
      overflow-x: auto;
      outline: none;
      padding: $s $s;
    }
  }
  button.evenButton {
    background-color: $white;
    border-color: $white;
    margin-top: 28px;
  }
}

.unhighlighted {
  opacity: .5;
  z-index: 10;
}

.edgeLabel {
  fill: #000 !important;
}
.inferenceLabel {
  font-weight: 800;
  margin-bottom: $s;
  width: fit-content;
  position: relative;
  display: flex;
  align-items: center;
  cursor: default;
  svg {
    margin-left: 4px;
  }
}
.inferenceSeparator {
  width: 100%;
  margin: 0 auto 20px;
  height: 2px;
  background-color: $darkGray;
}
.filtered {
  opacity: 0.5;
}
.paginationContainer {
  display: grid;
}